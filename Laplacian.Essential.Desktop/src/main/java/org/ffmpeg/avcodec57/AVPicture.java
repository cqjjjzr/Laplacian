package org.ffmpeg.avcodec57;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : .\libavcodec\avcodec.h:1081</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVPicture extends Structure {
	/**
	 * < pointers to the image data planes<br>
	 * C type : uint8_t*[8]
	 */
	public Pointer[] data = new Pointer[8];
	/**
	 * < number of bytes per line<br>
	 * C type : int[8]
	 */
	public int[] linesize = new int[8];
	public AVPicture() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("data", "linesize");
	}
	/**
	 * @param data < pointers to the image data planes<br>
	 * C type : uint8_t*[8]<br>
	 * @param linesize < number of bytes per line<br>
	 * C type : int[8]
	 */
	public AVPicture(Pointer data[], int linesize[]) {
		super();
		if ((data.length != this.data.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.data = data;
		if ((linesize.length != this.linesize.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.linesize = linesize;
	}
	public AVPicture(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends AVPicture implements Structure.ByReference {
		
	};
	public static class ByValue extends AVPicture implements Structure.ByValue {
		
	};
}
