package org.ffmpeg.avfilter6;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.IntByReference;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : libavfilter\buffersink.h:16</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVBufferSinkParams extends Structure {
	/**
	 * < list of allowed pixel formats, terminated by AV_PIX_FMT_NONE<br>
	 * C type : AVPixelFormat*
	 */
	public IntByReference pixel_fmts;
	public AVBufferSinkParams() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("pixel_fmts");
	}
	/**
	 * @param pixel_fmts < list of allowed pixel formats, terminated by AV_PIX_FMT_NONE<br>
	 * C type : AVPixelFormat*
	 */
	public AVBufferSinkParams(IntByReference pixel_fmts) {
		super();
		this.pixel_fmts = pixel_fmts;
	}
	public AVBufferSinkParams(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends AVBufferSinkParams implements Structure.ByReference {
		
	};
	public static class ByValue extends AVBufferSinkParams implements Structure.ByValue {
		
	};
}
