package org.ffmpeg.avfilter6;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import org.ffmpeg.avfilter6.Avfilter6Library.avfilter_execute_func;

import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : libavfilter\avfilter.h:394</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVFilterGraph extends Structure {
	/** C type : const AVClass* */
	public Pointer av_class;
	/** C type : AVFilterContext** */
	public org.ffmpeg.avfilter6.AVFilterContext.ByReference[] filters;
	public int nb_filters;
	/**
	 * < sws options to use for the auto-inserted scale filters<br>
	 * C type : char*
	 */
	public Pointer scale_sws_opts;
	/**
	 * < libavresample options to use for the auto-inserted resample filters<br>
	 * C type : char*
	 */
	public Pointer resample_lavr_opts;
	public int thread_type;
	public int nb_threads;
	/** C type : AVFilterGraphInternal* */
	public org.ffmpeg.avfilter6.AVFilterGraphInternal.ByReference internal;
	/** C type : void* */
	public Pointer opaque;
	/** C type : avfilter_execute_func* */
	public avfilter_execute_func execute;
	/**
	 * < swr options to use for the auto-inserted aresample filters, Access ONLY through AVOptions<br>
	 * C type : char*
	 */
	public Pointer aresample_swr_opts;
	/** C type : AVFilterLink** */
	public org.ffmpeg.avfilter6.AVFilterLink.ByReference[] sink_links;
	public int sink_links_count;
	public int disable_auto_convert;
	public AVFilterGraph() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("av_class", "filters", "nb_filters", "scale_sws_opts", "resample_lavr_opts", "thread_type", "nb_threads", "internal", "opaque", "execute", "aresample_swr_opts", "sink_links", "sink_links_count", "disable_auto_convert");
	}
	public AVFilterGraph(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends AVFilterGraph implements Structure.ByReference {
		
	};
	public static class ByValue extends AVFilterGraph implements Structure.ByValue {
		
	};
}
