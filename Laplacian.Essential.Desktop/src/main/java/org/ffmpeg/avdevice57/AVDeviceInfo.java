package org.ffmpeg.avdevice57;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : libavdevice\avdevice.h:164</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVDeviceInfo extends Structure {
	/**
	 * < device name, format depends on device<br>
	 * C type : char*
	 */
	public Pointer device_name;
	/**
	 * < human friendly name<br>
	 * C type : char*
	 */
	public Pointer device_description;
	public AVDeviceInfo() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("device_name", "device_description");
	}
	/**
	 * @param device_name < device name, format depends on device<br>
	 * C type : char*<br>
	 * @param device_description < human friendly name<br>
	 * C type : char*
	 */
	public AVDeviceInfo(Pointer device_name, Pointer device_description) {
		super();
		this.device_name = device_name;
		this.device_description = device_description;
	}
	public AVDeviceInfo(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends AVDeviceInfo implements Structure.ByReference {
		
	};
	public static class ByValue extends AVDeviceInfo implements Structure.ByValue {
		
	};
}
