package org.ffmpeg.avutil55;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : libavutil\pixdesc.h:27</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVPixFmtDescriptor extends Structure {
	/** C type : const char* */
	public Pointer name;
	/** < The number of components each pixel has, (1-4) */
	public byte nb_components;
	public byte log2_chroma_w;
	public byte log2_chroma_h;
	public long flags;
	/** C type : AVComponentDescriptor[4] */
	public AVComponentDescriptor[] comp = new AVComponentDescriptor[4];
	/** C type : const char* */
	public Pointer alias;
	public AVPixFmtDescriptor() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("name", "nb_components", "log2_chroma_w", "log2_chroma_h", "flags", "comp", "alias");
	}
	/**
	 * @param name C type : const char*<br>
	 * @param nb_components < The number of components each pixel has, (1-4)<br>
	 * @param comp C type : AVComponentDescriptor[4]<br>
	 * @param alias C type : const char*
	 */
	public AVPixFmtDescriptor(Pointer name, byte nb_components, byte log2_chroma_w, byte log2_chroma_h, long flags, AVComponentDescriptor comp[], Pointer alias) {
		super();
		this.name = name;
		this.nb_components = nb_components;
		this.log2_chroma_w = log2_chroma_w;
		this.log2_chroma_h = log2_chroma_h;
		this.flags = flags;
		if ((comp.length != this.comp.length)) 
			throw new IllegalArgumentException("Wrong array size !");
		this.comp = comp;
		this.alias = alias;
	}
	public AVPixFmtDescriptor(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends AVPixFmtDescriptor implements Structure.ByReference {
		
	};
	public static class ByValue extends AVPixFmtDescriptor implements Structure.ByValue {
		
	};
}
