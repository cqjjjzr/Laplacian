package org.ffmpeg.avcodec57;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
import org.ffmpeg.avutil55.AVRational;
/**
 * <i>native declaration : .\libavcodec\avcodec.h:1173</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVCodecParameters extends Structure {
	/**
	 * @see org.ffmpeg.avutil55.Avutil55Library#AVMediaType<br>
	 * C type : AVMediaType
	 */
	public int codec_type;
	/**
	 * @see AVCodecID<br>
	 * C type : AVCodecID
	 */
	public int codec_id;
	public int codec_tag;
	/** C type : uint8_t* */
	public Pointer extradata;
	public int extradata_size;
	public int format;
	public long bit_rate;
	public int bits_per_coded_sample;
	public int bits_per_raw_sample;
	public int profile;
	public int level;
	public int width;
	public int height;
	/** C type : AVRational */
	public AVRational sample_aspect_ratio;
	/**
	 * @see AVFieldOrder<br>
	 * C type : AVFieldOrder
	 */
	public int field_order;
	/**
	 * @see org.ffmpeg.avutil55.Avutil55Library#AVColorRange<br>
	 * C type : AVColorRange
	 */
	public int color_range;
	/**
	 * @see org.ffmpeg.avutil55.Avutil55Library#AVColorPrimaries<br>
	 * C type : AVColorPrimaries
	 */
	public int color_primaries;
	/**
	 * @see org.ffmpeg.avutil55.Avutil55Library#AVColorTransferCharacteristic<br>
	 * C type : AVColorTransferCharacteristic
	 */
	public int color_trc;
	/**
	 * @see org.ffmpeg.avutil55.Avutil55Library#AVColorSpace<br>
	 * C type : AVColorSpace
	 */
	public int color_space;
	/**
	 * @see org.ffmpeg.avutil55.Avutil55Library#AVChromaLocation<br>
	 * C type : AVChromaLocation
	 */
	public int chroma_location;
	public int video_delay;
	public long channel_layout;
	public int channels;
	public int sample_rate;
	public int block_align;
	public int frame_size;
	public int initial_padding;
	public int trailing_padding;
	public int seek_preroll;
	public AVCodecParameters() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("codec_type", "codec_id", "codec_tag", "extradata", "extradata_size", "format", "bit_rate", "bits_per_coded_sample", "bits_per_raw_sample", "profile", "level", "width", "height", "sample_aspect_ratio", "field_order", "color_range", "color_primaries", "color_trc", "color_space", "chroma_location", "video_delay", "channel_layout", "channels", "sample_rate", "block_align", "frame_size", "initial_padding", "trailing_padding", "seek_preroll");
	}
	public AVCodecParameters(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends AVCodecParameters implements Structure.ByReference {
		
	};
	public static class ByValue extends AVCodecParameters implements Structure.ByValue {
		
	};
}
