package org.ffmpeg.avcodec57;
import com.sun.jna.Callback;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
import org.ffmpeg.avcodec57.Avcodec57Library.MpegEncContext;
import org.ffmpeg.avutil55.AVFrame;
/**
 * <i>native declaration : .\libavcodec\avcodec.h:1069</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVHWAccel extends Structure {
	/** C type : const char* */
	public Pointer name;
	/**
	 * @see org.ffmpeg.avutil55.Avutil55Library#AVMediaType<br>
	 * C type : AVMediaType
	 */
	public int type;
	/**
	 * @see AVCodecID<br>
	 * C type : AVCodecID
	 */
	public int id;
	/**
	 * @see org.ffmpeg.avutil55.Avutil55Library#AVPixelFormat<br>
	 * C type : AVPixelFormat
	 */
	public int pix_fmt;
	public int capabilities;
	/** C type : AVHWAccel* */
	public ByReference next;
	/** C type : alloc_frame_callback* */
	public alloc_frame_callback alloc_frame;
	/** C type : start_frame_callback* */
	public start_frame_callback start_frame;
	/** C type : decode_slice_callback* */
	public decode_slice_callback decode_slice;
	/** C type : end_frame_callback* */
	public end_frame_callback end_frame;
	public int frame_priv_data_size;
	/** C type : decode_mb_callback* */
	public decode_mb_callback decode_mb;
	/** C type : init_callback* */
	public org.ffmpeg.avfilter6.AVFilter.init_callback init;
	/** C type : uninit_callback* */
	public org.ffmpeg.avfilter6.AVFilter.uninit_callback uninit;
	public int priv_data_size;
	public int caps_internal;
	/** <i>native declaration : .\libavcodec\avcodec.h:1062</i> */
	public interface alloc_frame_callback extends Callback {
		int apply(AVCodecContext avctx, AVFrame frame);
	};
	/** <i>native declaration : .\libavcodec\avcodec.h:1063</i> */
	public interface start_frame_callback extends Callback {
		int apply(AVCodecContext avctx, Pointer buf, int buf_size);
	};
	/** <i>native declaration : .\libavcodec\avcodec.h:1064</i> */
	public interface decode_slice_callback extends Callback {
		int apply(AVCodecContext avctx, Pointer buf, int buf_size);
	};
	/** <i>native declaration : .\libavcodec\avcodec.h:1065</i> */
	public interface end_frame_callback extends Callback {
		int apply(AVCodecContext avctx);
	};
	/** <i>native declaration : .\libavcodec\avcodec.h:1066</i> */
	public interface decode_mb_callback extends Callback {
		void apply(MpegEncContext s);
	};
	/** <i>native declaration : .\libavcodec\avcodec.h:1067</i> */
	public interface init_callback extends Callback {
		int apply(AVCodecContext avctx);
	};
	/** <i>native declaration : .\libavcodec\avcodec.h:1068</i> */
	public interface uninit_callback extends Callback {
		int apply(AVCodecContext avctx);
	};
	public AVHWAccel() {
		super();
	}
	protected List<String> getFieldOrder() {
		return Arrays.asList("name", "type", "id", "pix_fmt", "capabilities", "next", "alloc_frame", "start_frame", "decode_slice", "end_frame", "frame_priv_data_size", "decode_mb", "init", "uninit", "priv_data_size", "caps_internal");
	}
	public AVHWAccel(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends AVHWAccel implements Structure.ByReference {
		
	};
	public static class ByValue extends AVHWAccel implements Structure.ByValue {
		
	};
}
